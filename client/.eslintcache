[{"D:\\fashion-e-commerce-app\\client\\src\\index.js":"1","D:\\fashion-e-commerce-app\\client\\src\\App.js":"2","D:\\fashion-e-commerce-app\\client\\src\\reportWebVitals.js":"3","D:\\fashion-e-commerce-app\\client\\src\\pages\\Signin\\index.js":"4","D:\\fashion-e-commerce-app\\client\\src\\pages\\Home\\index.js":"5","D:\\fashion-e-commerce-app\\client\\src\\pages\\Signup\\index.js":"6","D:\\fashion-e-commerce-app\\client\\src\\store\\index.js":"7","D:\\fashion-e-commerce-app\\client\\src\\reducers\\index.js":"8","D:\\fashion-e-commerce-app\\client\\src\\actions\\constants.js":"9","D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\category.reducer.js":"10","D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\product.reducer.js":"11","D:\\fashion-e-commerce-app\\client\\src\\actions\\index.js":"12","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\register.actions.js":"13","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\auth.actions.js":"14","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\category.actions.js":"15","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\product.actions.js":"16","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\initialData.actions.js":"17","D:\\fashion-e-commerce-app\\client\\src\\helpers\\axios.js":"18","D:\\fashion-e-commerce-app\\client\\src\\urlConfig.js":"19","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\register.reducer.js":"20","D:\\fashion-e-commerce-app\\client\\src\\components\\HOC\\PrivateRoute.js":"21","D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Modal\\index.js":"22","D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Input\\index.js":"23","D:\\fashion-e-commerce-app\\client\\src\\components\\Header\\index.js":"24","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\order.actions.js":"25","D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\order.reducer.js":"26","D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Card\\index.js":"27","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\cart.actions.js":"28","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\category.actions.js":"29","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\cart.reducer.js":"30","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\category.reducer.js":"31","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\user.actions.js":"32","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\user.reducer.js":"33","D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\product.actions.js":"34","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\product.reducer.js":"35","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\page.actions.js":"36","D:\\fashion-e-commerce-app\\client\\src\\helpers\\linearCategories.js":"37","D:\\fashion-e-commerce-app\\client\\src\\utils\\getParams.js":"38","D:\\fashion-e-commerce-app\\client\\src\\components\\Layout\\AdminLayout\\index.js":"39","D:\\fashion-e-commerce-app\\client\\src\\components\\Layout\\UserLayout\\index.js":"40","D:\\fashion-e-commerce-app\\client\\src\\components\\MenuHeader\\index.js":"41","D:\\fashion-e-commerce-app\\client\\src\\components\\PriceDetails\\index.js":"42","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Products\\index.js":"43","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\index.js":"44","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Orders\\index.js":"45","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\components\\AddCategoryModal.js":"46","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\components\\UpdateCategoriesModal.js":"47","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\index.js":"48","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductDetailsPage\\index.js":"49","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CartPage\\index.js":"50","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CheckoutPage\\index.js":"51","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\OrderPage\\index.js":"52","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\OrderDetailsPage\\index.js":"53","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CheckoutPage\\AddressForm.js":"54","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\ClothingAndAccessories\\index.js":"55","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\ProductPage\\index.js":"56","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CartPage\\CartItem\\index.js":"57","D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\auth.reducer.js":"58","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\NewPage\\index.js":"59","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\register.actions.js":"60","D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\register.reducer.js":"61","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\CreateAdmin\\index.js":"62"},{"size":734,"mtime":1607767602638,"results":"63","hashOfConfig":"64"},{"size":2266,"mtime":1607866529234,"results":"65","hashOfConfig":"64"},{"size":362,"mtime":499162500000,"results":"66","hashOfConfig":"64"},{"size":3571,"mtime":1607794988442,"results":"67","hashOfConfig":"64"},{"size":1556,"mtime":1607859420494,"results":"68","hashOfConfig":"64"},{"size":4801,"mtime":1607794677163,"results":"69","hashOfConfig":"64"},{"size":316,"mtime":1607444759438,"results":"70","hashOfConfig":"64"},{"size":1020,"mtime":1607849473704,"results":"71","hashOfConfig":"64"},{"size":5229,"mtime":1607849190047,"results":"72","hashOfConfig":"64"},{"size":3184,"mtime":1607447780675,"results":"73","hashOfConfig":"64"},{"size":821,"mtime":1607581528272,"results":"74","hashOfConfig":"64"},{"size":494,"mtime":1607849097037,"results":"75","hashOfConfig":"64"},{"size":665,"mtime":1607766639404,"results":"76","hashOfConfig":"64"},{"size":1553,"mtime":1607772907805,"results":"77","hashOfConfig":"64"},{"size":2434,"mtime":1607766504267,"results":"78","hashOfConfig":"64"},{"size":1864,"mtime":1607498152829,"results":"79","hashOfConfig":"64"},{"size":728,"mtime":1607766523490,"results":"80","hashOfConfig":"64"},{"size":906,"mtime":1607766823803,"results":"81","hashOfConfig":"64"},{"size":157,"mtime":1607491412579,"results":"82","hashOfConfig":"64"},{"size":785,"mtime":1607491726824,"results":"83","hashOfConfig":"64"},{"size":630,"mtime":1607577352497,"results":"84","hashOfConfig":"64"},{"size":989,"mtime":1607493483433,"results":"85","hashOfConfig":"64"},{"size":1377,"mtime":1607493461103,"results":"86","hashOfConfig":"64"},{"size":2731,"mtime":1607848410421,"results":"87","hashOfConfig":"64"},{"size":1385,"mtime":1607501474385,"results":"88","hashOfConfig":"64"},{"size":430,"mtime":1607502818961,"results":"89","hashOfConfig":"64"},{"size":479,"mtime":1607765605533,"results":"90","hashOfConfig":"64"},{"size":3367,"mtime":1607848299135,"results":"91","hashOfConfig":"64"},{"size":674,"mtime":1607766603618,"results":"92","hashOfConfig":"64"},{"size":903,"mtime":1607767425628,"results":"93","hashOfConfig":"64"},{"size":2238,"mtime":1607767674491,"results":"94","hashOfConfig":"64"},{"size":3394,"mtime":1607766684822,"results":"95","hashOfConfig":"64"},{"size":2136,"mtime":1607506865664,"results":"96","hashOfConfig":"64"},{"size":1829,"mtime":1607766630844,"results":"97","hashOfConfig":"64"},{"size":1752,"mtime":1607767639504,"results":"98","hashOfConfig":"64"},{"size":679,"mtime":1607577897471,"results":"99","hashOfConfig":"64"},{"size":412,"mtime":1607448712576,"results":"100","hashOfConfig":"64"},{"size":429,"mtime":1607767716410,"results":"101","hashOfConfig":"64"},{"size":1461,"mtime":1607848701194,"results":"102","hashOfConfig":"64"},{"size":314,"mtime":1607764693469,"results":"103","hashOfConfig":"64"},{"size":1320,"mtime":1607776088326,"results":"104","hashOfConfig":"64"},{"size":916,"mtime":1607765188991,"results":"105","hashOfConfig":"64"},{"size":8199,"mtime":1607860298886,"results":"106","hashOfConfig":"64"},{"size":9306,"mtime":1607864666869,"results":"107","hashOfConfig":"64"},{"size":4425,"mtime":1607850778100,"results":"108","hashOfConfig":"64"},{"size":1581,"mtime":1607795974797,"results":"109","hashOfConfig":"64"},{"size":3952,"mtime":1607797169257,"results":"110","hashOfConfig":"64"},{"size":881,"mtime":1607775485230,"results":"111","hashOfConfig":"64"},{"size":4762,"mtime":1607797932152,"results":"112","hashOfConfig":"64"},{"size":3554,"mtime":1607848548551,"results":"113","hashOfConfig":"64"},{"size":11247,"mtime":1607847355360,"results":"114","hashOfConfig":"64"},{"size":3884,"mtime":1607848065576,"results":"115","hashOfConfig":"64"},{"size":4402,"mtime":1607848145628,"results":"116","hashOfConfig":"64"},{"size":6768,"mtime":1607799006048,"results":"117","hashOfConfig":"64"},{"size":3184,"mtime":1607775495393,"results":"118","hashOfConfig":"64"},{"size":3444,"mtime":1607775508531,"results":"119","hashOfConfig":"64"},{"size":1530,"mtime":1607798639609,"results":"120","hashOfConfig":"64"},{"size":1223,"mtime":1607773824539,"results":"121","hashOfConfig":"64"},{"size":5673,"mtime":1607797035838,"results":"122","hashOfConfig":"64"},{"size":718,"mtime":1607849870046,"results":"123","hashOfConfig":"64"},{"size":777,"mtime":1607849486998,"results":"124","hashOfConfig":"64"},{"size":4414,"mtime":1607850643086,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"r8wz5",{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"128"},"D:\\fashion-e-commerce-app\\client\\src\\index.js",[],["270","271"],"D:\\fashion-e-commerce-app\\client\\src\\App.js",["272"],"import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport { isUserLoggedIn } from \"./actions\";\nimport \"./App.css\";\n\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\n\nimport Products from \"./pages/AdminPages/Products\";\nimport Orders from \"./pages/AdminPages/Orders\";\nimport Categories from \"./pages/AdminPages/Categories\";\nimport NewPage from \"./pages/AdminPages/NewPage\";\nimport AdminSignup from \"./pages/AdminPages/CreateAdmin\";\n\nimport ProductListPage from \"./pages/UserPages/ProductListPage\";\nimport ProductDetailsPage from \"./pages/UserPages/ProductDetailsPage\";\nimport CartPage from \"./pages/UserPages/CartPage\";\nimport CheckoutPage from \"./pages/UserPages/CheckoutPage\";\nimport OrderPage from \"./pages/UserPages/OrderPage\";\nimport OrderDetailsPage from \"./pages/UserPages/OrderDetailsPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n\n        <PrivateRoute path=\"/admin/page\" component={NewPage} />\n        <PrivateRoute path=\"/admin/categories\" component={Categories} />\n        <PrivateRoute path=\"/admin/products\" component={Products} />\n        <PrivateRoute path=\"/admin/orders\" component={Orders} />\n        <PrivateRoute path=\"/admin/createAdmin\" component={AdminSignup} />\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n\n        <Route path=\"/cart\" component={CartPage} />\n        <Route path=\"/checkout\" component={CheckoutPage} />\n        <Route path=\"/account/orders\" component={OrderPage} />\n        <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n        <Route\n          path=\"/:productSlug/:productId/p\"\n          component={ProductDetailsPage}\n        />\n        <Route path=\"/:slug\" component={ProductListPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\fashion-e-commerce-app\\client\\src\\reportWebVitals.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\Signin\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\Home\\index.js",["273","274","275","276"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/UserLayout\";\r\n\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport carusel3 from \"../../images/carusel3.jpg\";\r\nimport carusel4 from \"../../images/carusel4.jpg\";\r\nimport carusel5 from \"../../images/carusel5.jpg\";\r\n\r\n/**\r\n * @author\r\n * @function HomePage\r\n **/\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div style={{ marginTop: \"10px\" }}>\r\n      <Layout>\r\n        home\r\n        {/*<Carousel>\r\n          <Carousel.Item interval={3000}>\r\n            <img className=\"w-100\" src={carusel3} alt=\"First slide\" />\r\n            <Carousel.Caption>\r\n              <h3>First slide label</h3>\r\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img className=\" w-100\" src={carusel4} alt=\"Third slide\" />\r\n            <Carousel.Caption>\r\n              <h3>Second slide label</h3>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={2000}>\r\n            <img className=\" w-100\" src={carusel5} alt=\"Third slide\" />\r\n            <Carousel.Caption>\r\n              <h3>Second slide label</h3>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>{\" \"}*/}\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\Signup\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\store\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\constants.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\category.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\product.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\register.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\auth.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\category.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\product.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\initialData.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\helpers\\axios.js",[],"D:\\fashion-e-commerce-app\\client\\src\\urlConfig.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\register.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\HOC\\PrivateRoute.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Modal\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Input\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\Header\\index.js",["277"],"import React from \"react\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineUnorderedList } from \"react-icons/ai\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout, signup as _signup } from \"../../actions\";\r\n\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { user } = auth;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  const renderLoggedInMenu = () => {\r\n    return (\r\n      <Nav>\r\n        <Link style={{ color: \"#fff\", textDecoration: \"none\" }} to=\"/cart\">\r\n          <TiShoppingCart /> &nbsp;Cart\r\n        </Link>{\" \"}\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <Link\r\n          style={{ color: \"#fff\", textDecoration: \"none\" }}\r\n          to=\"/account/orders\"\r\n        >\r\n          <AiOutlineUnorderedList /> &nbsp;My Orders\r\n        </Link>{\" \"}\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <span\r\n          onClick={logout}\r\n          style={{ cursor: \"pointer\", color: \"#fff\", textDecoration: \"none\" }}\r\n        >\r\n          Logout\r\n        </span>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInMenu = () => {\r\n    return (\r\n      <Nav.Link>\r\n        <Link style={{ color: \"#fff\", textDecoration: \"none\" }} to=\"/signin\">\r\n          Login\r\n        </Link>\r\n        &nbsp; &nbsp;\r\n        <Link style={{ color: \"#fff\", textDecoration: \"none\" }} to=\"/signup\">\r\n          Signup\r\n        </Link>\r\n      </Nav.Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Navbar\r\n        collapseOnSelect\r\n        fixed=\"top\"\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        style={{ zIndex: 1 }}\r\n      >\r\n        <Container fluid>\r\n          <Link to=\"/\">\r\n            <Navbar.Brand>Fashion E-Commerce</Navbar.Brand>\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#features\">\r\n                {user && user.role === \"admin\" && (\r\n                  <Link\r\n                    style={{ color: \"#FE0000\", textDecoration: \"none\" }}\r\n                    to=\"/admin/categories\"\r\n                  >\r\n                    Admin Pannel\r\n                  </Link>\r\n                )}\r\n              </Nav.Link>\r\n            </Nav>\r\n\r\n            {auth.authenticate ? renderLoggedInMenu() : renderNonLoggedInMenu()}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\order.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\order.reducer.js",["278","279"],"import { orderConstants } from \"../../actions/constants\";\r\n\r\nconst initState = {\r\n  orders: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","D:\\fashion-e-commerce-app\\client\\src\\components\\UI\\Card\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\cart.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\category.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\cart.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\category.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\user.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\user.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\user\\product.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\product.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\page.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\helpers\\linearCategories.js",[],"D:\\fashion-e-commerce-app\\client\\src\\utils\\getParams.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\Layout\\AdminLayout\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\Layout\\UserLayout\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\components\\MenuHeader\\index.js",["280"],"import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllCategory } from \"../../actions\";\r\n\r\n/**\r\n * @author\r\n * @function MenuHeader\r\n **/\r\n\r\nconst MenuHeader = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push(\r\n        <li key={category.name}>\r\n          {category.parentId ? (\r\n            <a\r\n              href={`/${category.slug}?cid=${category._id}&type=${category.type}`}\r\n            >\r\n              {category.name}\r\n            </a>\r\n          ) : (\r\n            <span>{category.name}</span>\r\n          )}\r\n          {category.children.length > 0 ? (\r\n            <ul>{renderCategories(category.children)}</ul>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }} className=\"menuHeader\">\r\n      <ul>\r\n        {category.categories.length > 0\r\n          ? renderCategories(category.categories)\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuHeader;\r\n",["281","282"],"D:\\fashion-e-commerce-app\\client\\src\\components\\PriceDetails\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Products\\index.js",["283"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../../components/Layout/AdminLayout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from \"../../../actions\";\r\nimport { generatePublicUrl } from \"../../../urlConfig\";\r\nimport \"./style.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IoIosArrowForward, IoIosAdd, IoIosTrash } from \"react-icons/io\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\nconst Products = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form)).then(() => setShow(false));\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category?.name}</td>\r\n                  <td>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      onClick={() => showProductDetailsModal(product)}\r\n                      variant=\"info\"\r\n                    >\r\n                      {\" \"}\r\n                      <IoIosArrowForward />\r\n                      Info\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                      variant=\"danger\"\r\n                    >\r\n                      {\" \"}\r\n                      <IoIosTrash />\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"textarea\"\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={generatePublicUrl(picture.img)} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <Button onClick={handleShow} variant=\"success\">\r\n                {\" \"}\r\n                <IoIosAdd />\r\n                Add\r\n              </Button>{\" \"}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\index.js",["284","285","286"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../../components/Layout/AdminLayout\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllCategory,\r\n  addCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoriesAction,\r\n} from \"../../../actions\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosAdd,\r\n  IoIosTrash,\r\n  IoIosCloudUpload,\r\n} from \"react-icons/io\";\r\n\r\nimport { getInitialData } from \"../../../actions\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoryModal\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Category\r\n **/\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getInitialData());\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!category.loading) {\r\n      setShow(false);\r\n    }\r\n  }, [category.loading]);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    if (categoryName === \"\") {\r\n      alert(\"Category name is required\");\r\n      setShow(false);\r\n      return;\r\n    }\r\n\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    console.log(value);\r\n    if (type === \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type === \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    dispatch(updateCategories(form));\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const expandedIdsArray = expandedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    if (checkedIdsArray.length > 0) {\r\n      dispatch(deleteCategoriesAction(checkedIdsArray));\r\n    }\r\n\r\n    setDeleteCategoryModal(false);\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Expanded</h5>\r\n        {expandedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const categoryList = createCategoryList(category.categories);\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <div className=\"actionBtnContainer\">\r\n                <span>Actions : </span>\r\n                <Button onClick={handleShow} variant=\"success\">\r\n                  {\" \"}\r\n                  <IoIosAdd />\r\n                  Add\r\n                </Button>{\" \"}\r\n                <Button onClick={updateCategory} variant=\"info\">\r\n                  {\" \"}\r\n                  <IoIosCloudUpload />\r\n                  Edit\r\n                </Button>{\" \"}\r\n                <Button onClick={deleteCategory} variant=\"danger\">\r\n                  {\" \"}\r\n                  <IoIosTrash />\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={() => setShow(false)}\r\n        onSubmit={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n        categoryName={categoryName}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        setParentCategoryId={setParentCategoryId}\r\n        categoryList={categoryList}\r\n        handleCategoryImage={handleCategoryImage}\r\n      />\r\n      <UpdateCategoriesModal\r\n        show={updateCategoryModal}\r\n        handleClose={() => setUpdateCategoryModal(false)}\r\n        onSubmit={updateCategoriesForm}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        handleCategoryInput={handleCategoryInput}\r\n        categoryList={categoryList}\r\n      />\r\n      {/* {renderAddCategoryModal()} */}\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Orders\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\components\\AddCategoryModal.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\Categories\\components\\UpdateCategoriesModal.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductDetailsPage\\index.js",["287"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductDetailsById } from \"../../../actions\";\r\nimport Layout from \"../../../components/Layout/UserLayout\";\r\nimport { IoIosStar, IoMdCart } from \"react-icons/io\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport { generatePublicUrl } from \"../../../urlConfig\";\r\nimport { addToCart } from \"../../../actions\";\r\n\r\n/**\r\n * @author\r\n * @function ProductDetailsPage\r\n **/\r\n\r\nconst ProductDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.userProduct);\r\n\r\n  useEffect(() => {\r\n    const { productId } = props.match.params;\r\n    const payload = {\r\n      params: {\r\n        productId,\r\n      },\r\n    };\r\n    dispatch(getProductDetailsById(payload));\r\n  }, []);\r\n\r\n  if (Object.keys(product.productDetails).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", marginTop: \"10px\" }}>\r\n      <Layout>\r\n        <div\r\n          className=\"productDescriptionContainer\"\r\n          style={{ padding: \"10px\", marginTop: \"50px\" }}\r\n        >\r\n          <div className=\"verticalImageStack\">\r\n            {product.productDetails.productPictures.map((thumb, index) => (\r\n              <div className=\"thumbnail\">\r\n                <img\r\n                  style={{ cursor: \"pointer\" }}\r\n                  src={generatePublicUrl(thumb.img)}\r\n                  alt={thumb.img}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flexRow\">\r\n            <div className=\"productDescContainer\">\r\n              <div className=\"productDescImgContainer\">\r\n                <img\r\n                  style={{ cursor: \"pointer\" }}\r\n                  src={generatePublicUrl(\r\n                    product.productDetails.productPictures[0].img\r\n                  )}\r\n                  alt={`${product.productDetails.productPictures[0].img}`}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flexRow\">\r\n                <Button\r\n                  style={{\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  icon={<IoMdCart />}\r\n                  onClick={() => {\r\n                    const { _id, name, price } = product.productDetails;\r\n                    const img = product.productDetails.productPictures[0].img;\r\n                    dispatch(addToCart({ _id, name, price, img }));\r\n                    props.history.push(`/cart`);\r\n                  }}\r\n                >\r\n                  ADD TO CART\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {/* product description */}\r\n            <div\r\n              style={{\r\n                marginLeft: \"40px\",\r\n              }}\r\n              className=\"productDetails\"\r\n            >\r\n              <p className=\"productTitle\">{product.productDetails.name}</p>\r\n              <div>\r\n                <span className=\"ratingCount\">\r\n                  3.5 <IoIosStar />\r\n                </span>\r\n                <span className=\"ratingNumbersReviews\">\r\n                  42,500 Ratings & 2,310 Reviews\r\n                </span>\r\n              </div>\r\n              <div className=\"extraOffer\">Extra $ 4500 off </div>\r\n              <div className=\"flexRow priceContainer\">\r\n                <span className=\"price\">$ {product.productDetails.price}</span>\r\n                <span className=\"discount\" style={{ margin: \"0 10px\" }}>\r\n                  22% off\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    color: \"#212121\",\r\n                    fontSize: \"14px\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                >\r\n                  Available Offers\r\n                </p>\r\n                <p style={{ display: \"flex\" }}>\r\n                  <span\r\n                    style={{\r\n                      width: \"100px\",\r\n                      fontSize: \"12px\",\r\n                      color: \"#878787\",\r\n                      fontWeight: \"600\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                  >\r\n                    Description\r\n                  </span>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      color: \"#212121\",\r\n                    }}\r\n                  >\r\n                    {product.productDetails.description}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CartPage\\index.js",["288"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../../components/Layout/UserLayout\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport CartItem from \"./CartItem\";\r\nimport { addToCart, getCartItems, removeCartItem } from \"../../../actions\";\r\nimport PriceDetails from \"../../../components/PriceDetails\";\r\n\r\nimport \"./style.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function CartPage\r\n **/\r\n\r\nconst CartPage = (props) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [cartItems, setCartItems] = useState(cart.cartItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setCartItems(cart.cartItems);\r\n  }, [cart.cartItems]);\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      dispatch(getCartItems());\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  const onQuantityIncrement = (_id, qty) => {\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, 1));\r\n  };\r\n\r\n  const onQuantityDecrement = (_id, qty) => {\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, -1));\r\n  };\r\n\r\n  const onRemoveCartItem = (_id) => {\r\n    dispatch(removeCartItem({ productId: _id }));\r\n  };\r\n\r\n  if (props.onlyCartItems) {\r\n    return (\r\n      <>\r\n        {Object.keys(cartItems).map((key, index) => (\r\n          <CartItem\r\n            key={index}\r\n            cartItem={cartItems[key]}\r\n            onQuantityInc={onQuantityIncrement}\r\n            onQuantityDec={onQuantityDecrement}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", marginTop: \"10px\" }}>\r\n      <Layout>\r\n        <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n          <Card\r\n            headerLeft={`My Cart`}\r\n            headerRight={<div>Deliver to</div>}\r\n            style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\r\n          >\r\n            {Object.keys(cartItems).map((key, index) => (\r\n              <CartItem\r\n                key={index}\r\n                cartItem={cartItems[key]}\r\n                onQuantityInc={onQuantityIncrement}\r\n                onQuantityDec={onQuantityDecrement}\r\n                onRemoveCartItem={onRemoveCartItem}\r\n              />\r\n            ))}\r\n\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                background: \"#ffffff\",\r\n                justifyContent: \"flex-end\",\r\n                boxShadow: \"0 0 10px 10px #eee\",\r\n                padding: \"10px 0\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <div style={{ width: \"250px\" }}>\r\n                <Button onClick={() => props.history.push(`/checkout`)}>\r\n                  PLACE ORDER\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          <PriceDetails\r\n            totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n              return qty + cart.cartItems[key].qty;\r\n            }, 0)}\r\n            totalPrice={Object.keys(cart.cartItems).reduce(\r\n              (totalPrice, key) => {\r\n                const { price, qty } = cart.cartItems[key];\r\n                return totalPrice + price * qty;\r\n              },\r\n              0\r\n            )}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CheckoutPage\\index.js",["289"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrder, getAddress, getCartItems } from \"../../../actions\";\r\nimport Layout from \"../../../components/Layout/UserLayout\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport PriceDetails from \"../../../components/PriceDetails\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport CartPage from \"../CartPage\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport { FormGroup, Label } from \"reactstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function CheckoutPage\r\n **/\r\n\r\nconst CheckoutStep = (props) => {\r\n  return (\r\n    <div className=\"checkoutStep\">\r\n      <div\r\n        onClick={props.onClick}\r\n        className={`checkoutHeader ${props.active && \"active\"}`}\r\n      >\r\n        <div>\r\n          <span className=\"stepNumber\">{props.stepNumber}</span>\r\n          <span className=\"stepTitle\">{props.title}</span>\r\n        </div>\r\n      </div>\r\n      {props.body && props.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = ({\r\n  adr,\r\n  selectAddress,\r\n  enableAddressEditForm,\r\n  confirmDeliveryAddress,\r\n  onAddressSubmit,\r\n}) => {\r\n  return (\r\n    <div className=\"flexRow addressContainer\">\r\n      <div className=\"flexRow sb addressinfo\">\r\n        <FormGroup check>\r\n          <Label check>\r\n            <input\r\n              name=\"address\"\r\n              onClick={() => selectAddress(adr)}\r\n              type=\"radio\"\r\n            />\r\n\r\n            {!adr.edit ? (\r\n              <div style={{ width: \"100%\" }}>\r\n                <div className=\"addressDetail\">\r\n                  <div>\r\n                    <span className=\"addressName\">{adr.name}</span>\r\n                    <span className=\"addressType\">{adr.addressType}</span>\r\n                    <span className=\"addressMobileNumber\">\r\n                      {adr.mobileNumber}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"fullAddress\">\r\n                  {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\r\n                </div>\r\n                {adr.selected && (\r\n                  <Button\r\n                    onClick={() => confirmDeliveryAddress(adr)}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      margin: \"10px 0\",\r\n                    }}\r\n                  >\r\n                    DELIVERY HERE\r\n                  </Button>\r\n                )}\r\n                &nbsp; &nbsp;\r\n                {adr.selected && (\r\n                  <Button onClick={() => enableAddressEditForm(adr)}>\r\n                    EDIT\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <AddressForm\r\n                withoutLayout={true}\r\n                onSubmitForm={onAddressSubmit}\r\n                initialData={adr}\r\n                onCancel={() => {}}\r\n              />\r\n            )}\r\n          </Label>\r\n        </FormGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [newAddress, setNewAddress] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  const [confirmAddress, setConfirmAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [orderSummary, setOrderSummary] = useState(false);\r\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n  const [paymentOption, setPaymentOption] = useState(false);\r\n  const [confirmOrder, setConfirmOrder] = useState(false);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddressSubmit = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const selectAddress = (addr) => {\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id\r\n        ? { ...adr, selected: true }\r\n        : { ...adr, selected: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const confirmDeliveryAddress = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const enableAddressEditForm = (addr) => {\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const userOrderConfirmation = () => {\r\n    setOrderConfirmation(true);\r\n    setOrderSummary(false);\r\n    setPaymentOption(true);\r\n  };\r\n\r\n  const onConfirmOrder = () => {\r\n    const totalAmount = Object.keys(cart.cartItems).reduce(\r\n      (totalPrice, key) => {\r\n        const { price, qty } = cart.cartItems[key];\r\n        return totalPrice + price * qty;\r\n      },\r\n      0\r\n    );\r\n    const items = Object.keys(cart.cartItems).map((key) => ({\r\n      productId: key,\r\n      payablePrice: cart.cartItems[key].price,\r\n      purchasedQty: cart.cartItems[key].qty,\r\n    }));\r\n    const payload = {\r\n      addressId: selectedAddress._id,\r\n      totalAmount,\r\n      items,\r\n      paymentStatus: \"pending\",\r\n      paymentType: \"cod\",\r\n    };\r\n\r\n    dispatch(addOrder(payload));\r\n    setConfirmOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.authenticate && dispatch(getAddress());\r\n    auth.authenticate && dispatch(getCartItems());\r\n  }, [auth.authenticate]);\r\n\r\n  useEffect(() => {\r\n    const address = user.address.map((adr) => ({\r\n      ...adr,\r\n      selected: false,\r\n      edit: false,\r\n    }));\r\n    setAddress(address);\r\n  }, [user.address]);\r\n\r\n  if (confirmOrder) {\r\n    return (\r\n      <div style={{ marginTop: \"10px\" }}>\r\n        <Layout>\r\n          <Card>\r\n            <div>Thank you, your order will be send very soon :)</div>\r\n          </Card>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", marginTop: \"10px\" }}>\r\n      <Layout>\r\n        <div\r\n          className=\"cartContainer\"\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            padding: \"10px\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          <div className=\"checkoutContainer\">\r\n            {/* check if user logged in or not */}\r\n            <CheckoutStep\r\n              stepNumber={\"1\"}\r\n              title={\"LOGIN\"}\r\n              active={!auth.authenticate}\r\n              body={\r\n                auth.authenticate ? (\r\n                  <div className=\"loggedInId\">\r\n                    <span style={{ fontWeight: 500 }}>\r\n                      {auth.user.fullName}\r\n                    </span>\r\n                    <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\r\n                  </div>\r\n                ) : (\r\n                  <div>YOU NEED TO LOGIN FIRST</div>\r\n                )\r\n              }\r\n            />\r\n            <CheckoutStep\r\n              stepNumber={\"2\"}\r\n              title={\"DELIVERY ADDRESS\"}\r\n              active={!confirmAddress && auth.authenticate}\r\n              body={\r\n                <>\r\n                  {confirmAddress ? (\r\n                    <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\r\n                  ) : (\r\n                    address.map((adr) => (\r\n                      <Address\r\n                        selectAddress={selectAddress}\r\n                        enableAddressEditForm={enableAddressEditForm}\r\n                        confirmDeliveryAddress={confirmDeliveryAddress}\r\n                        onAddressSubmit={onAddressSubmit}\r\n                        adr={adr}\r\n                      />\r\n                    ))\r\n                  )}\r\n                </>\r\n              }\r\n            />\r\n\r\n            {/* AddressForm */}\r\n            {confirmAddress ? null : newAddress ? (\r\n              <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\r\n            ) : auth.authenticate ? (\r\n              <CheckoutStep\r\n                style={{ cursor: \"pointer\" }}\r\n                stepNumber={\"+\"}\r\n                title={\"ADD NEW ADDRESS\"}\r\n                active={false}\r\n                onClick={() => setNewAddress(true)}\r\n              />\r\n            ) : null}\r\n\r\n            <CheckoutStep\r\n              stepNumber={\"3\"}\r\n              title={\"ORDER SUMMARY\"}\r\n              active={orderSummary}\r\n              body={\r\n                orderSummary ? (\r\n                  <CartPage onlyCartItems={true} />\r\n                ) : orderConfirmation ? (\r\n                  <div className=\"stepCompleted\">\r\n                    {Object.keys(cart.cartItems).length} items\r\n                  </div>\r\n                ) : null\r\n              }\r\n            />\r\n\r\n            {orderSummary && (\r\n              <Card\r\n                style={{\r\n                  margin: \"10px 0\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"flexRow sb\"\r\n                  style={{\r\n                    padding: \"20px\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <p style={{ fontSize: \"12px\" }}>\r\n                    Order confirmation email will be sent to{\" \"}\r\n                    <strong>{auth.user.email}</strong>\r\n                  </p>\r\n                  <Button\r\n                    onClick={userOrderConfirmation}\r\n                    style={{\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    CONTINUE{\" \"}\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            )}\r\n\r\n            <CheckoutStep\r\n              stepNumber={\"4\"}\r\n              title={\"PAYMENT OPTIONS\"}\r\n              active={paymentOption}\r\n              body={\r\n                paymentOption && (\r\n                  <div>\r\n                    <div\r\n                      className=\"flexRow\"\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        padding: \"20px\",\r\n                      }}\r\n                    >\r\n                      <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\r\n                      <div>Cash on delivery</div>\r\n                    </div>\r\n                    <Button\r\n                      onClick={onConfirmOrder}\r\n                      style={{\r\n                        width: \"200px\",\r\n                        margin: \"0 0 20px 20px\",\r\n                      }}\r\n                    >\r\n                      CONFIRM ORDER\r\n                    </Button>\r\n                  </div>\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n\r\n          {/* Price Component */}\r\n          <PriceDetails\r\n            totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n              return qty + cart.cartItems[key].qty;\r\n            }, 0)}\r\n            totalPrice={Object.keys(cart.cartItems).reduce(\r\n              (totalPrice, key) => {\r\n                const { price, qty } = cart.cartItems[key];\r\n                return totalPrice + price * qty;\r\n              },\r\n              0\r\n            )}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\OrderPage\\index.js",["290","291"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrders } from \"../../../actions\";\r\nimport Layout from \"../../../components/Layout/UserLayout\";\r\nimport { generatePublicUrl } from \"../../../urlConfig\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function OrderPage\r\n **/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst OrderPage = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  if (!auth.authenticate) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", marginTop: \"10px\" }}>\r\n      <Layout>\r\n        <h1 style={{ marginBottom: \"20px\" }}>My Orders</h1>\r\n        <Container>\r\n          <Grid container spacing={4}>\r\n            {user.orders.map((order) => {\r\n              return order.items.map((item) => (\r\n                <Grid item key={order._id} xs={12} sm={6} md={4}>\r\n                  <Card className={classes.card}>\r\n                    <Link\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        color: \"#343A40\",\r\n                        textDecoration: \"none\",\r\n                      }}\r\n                      to={`/order_details/${order._id}`}\r\n                    >\r\n                      <img\r\n                        className=\"orderImg\"\r\n                        src={generatePublicUrl(\r\n                          item.productId.productPictures[0].img\r\n                        )}\r\n                      />\r\n\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        style={{ margin: \"10px 0 10px 0 \" }}\r\n                        align=\"center\"\r\n                      >\r\n                        {item.productId.name}\r\n                      </Typography>\r\n                    </Link>\r\n                    <CardContent className={classes.cardContent}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Price : $ {item.payablePrice}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      style={{ margin: \"10px 0 10px 0 \" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {order.paymentStatus}\r\n                    </Typography>\r\n                  </Card>\r\n                </Grid>\r\n              ));\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\OrderDetailsPage\\index.js",["292"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrder } from \"../../../actions\";\r\nimport Layout from \"../../../components/Layout/UserLayout\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { generatePublicUrl } from \"../../../urlConfig\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function OrderDetails\r\n **/\r\n\r\nconst OrderDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.user.orderDetails);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const payload = {\r\n      orderId: props.match.params.orderId,\r\n    };\r\n    dispatch(getOrder(payload));\r\n  }, []);\r\n\r\n  if (!auth.authenticate) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const formatDate2 = (date) => {\r\n    const month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\r\n    }\r\n  };\r\n\r\n  if (!(orderDetails && orderDetails.address)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"70px \",\r\n      }}\r\n    >\r\n      <Layout>\r\n        <Container>\r\n          <Card\r\n            style={{\r\n              margin: \"10px 0\",\r\n              width: \"1160px\",\r\n            }}\r\n          >\r\n            <div className=\"delAdrContainer\">\r\n              <div className=\"delAdrDetails\">\r\n                <div className=\"delTitle\">Delivery Address</div>\r\n                <div className=\"delName\">{orderDetails.address.name}</div>\r\n                <div className=\"delAddress\">{orderDetails.address.address}</div>\r\n                <div className=\"delPhoneNumber\">\r\n                  Phone number {orderDetails.address.mobileNumber}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {orderDetails.items.map((item, index) => (\r\n            <Card\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"20px 0\",\r\n                margin: \"10px 0\",\r\n                width: \"1160px\",\r\n              }}\r\n            >\r\n              <div className=\"flexRow\">\r\n                <div className=\"delItemImgContainer\">\r\n                  <img\r\n                    src={generatePublicUrl(\r\n                      item.productId.productPictures[0].img\r\n                    )}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div style={{ width: \"250px\" }}>\r\n                  <div className=\"delItemName\">{item.productId.name}</div>\r\n                  <div> $ {item.payablePrice}</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ padding: \"25px 50px\" }}>\r\n                <div className=\"orderTrack\">\r\n                  {orderDetails.orderStatus.map((status) => (\r\n                    <div\r\n                      className={`orderStatus ${\r\n                        status.isCompleted ? \"active\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <div\r\n                        className={`point ${\r\n                          status.isCompleted ? \"active\" : \"\"\r\n                        }`}\r\n                      ></div>\r\n                      <div className=\"orderInfo\">\r\n                        <div className=\"status\">{status.type}</div>\r\n                        <div className=\"date\">{formatDate(status.date)}</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div style={{ fontWeight: \"500\", fontSize: 14 }}>\r\n                {orderDetails.orderStatus[3].isCompleted &&\r\n                  `Delivered on ${formatDate2(\r\n                    orderDetails.orderStatus[3].date\r\n                  )}`}\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </Container>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CheckoutPage\\AddressForm.js",["293","294"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAddress } from \"../../../actions\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Input from \"../../../components/UI/Input\";\r\n\r\n/**\r\n * @author\r\n * @function AddressForm\r\n **/\r\n\r\nconst AddressForm = (props) => {\r\n  const { initialData } = props;\r\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\r\n    initialData ? initialData.mobileNumber : \"\"\r\n  );\r\n  const [pinCode, setPinCode] = useState(\r\n    initialData ? initialData.pinCode : \"\"\r\n  );\r\n  const [locality, setLocality] = useState(\r\n    initialData ? initialData.locality : \"\"\r\n  );\r\n  const [address, setAddress] = useState(\r\n    initialData ? initialData.address : \"\"\r\n  );\r\n  const [cityDistrictTown, setCityDistrictTown] = useState(\r\n    initialData ? initialData.cityDistrictTown : \"\"\r\n  );\r\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\r\n  const [landmark, setLandmark] = useState(\r\n    initialData ? initialData.landmark : \"\"\r\n  );\r\n  const [alternatePhone, setAlternatePhone] = useState(\r\n    initialData ? initialData.alternatePhone : \"\"\r\n  );\r\n  const [addressType, setAddressType] = useState(\r\n    initialData ? initialData.addressType : \"\"\r\n  );\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [submitFlag, setSubmitFlag] = useState(false);\r\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\r\n\r\n  const inputContainer = {\r\n    width: \"100%\",\r\n    marginRight: 10,\r\n  };\r\n\r\n  const onAddressSubmit = (e) => {\r\n    const payload = {\r\n      address: {\r\n        name,\r\n        mobileNumber,\r\n        pinCode,\r\n        locality,\r\n        address,\r\n        cityDistrictTown,\r\n        state,\r\n        landmark,\r\n        alternatePhone,\r\n        addressType,\r\n      },\r\n    };\r\n    if (id) {\r\n      payload.address._id = id;\r\n    }\r\n    dispatch(addAddress(payload));\r\n    setSubmitFlag(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitFlag) {\r\n      let _address = {};\r\n      if (id) {\r\n        _address = {\r\n          _id: id,\r\n          name,\r\n          mobileNumber,\r\n          pinCode,\r\n          locality,\r\n          address,\r\n          cityDistrictTown,\r\n          state,\r\n          landmark,\r\n          alternatePhone,\r\n          addressType,\r\n        };\r\n      } else {\r\n        _address = user.address.slice(user.address.length - 1)[0];\r\n      }\r\n\r\n      props.onSubmitForm(_address);\r\n    }\r\n  }, [user.address]);\r\n\r\n  const renderAddressForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"number\"\r\n              label=\"10-digit mobile number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"number\"\r\n              label=\"Pincode\"\r\n              value={pinCode}\r\n              onChange={(e) => setPinCode(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Locality\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"City/District/Town\"\r\n              value={cityDistrictTown}\r\n              onChange={(e) => setCityDistrictTown(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"State\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Landmark (Optional)\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <Input\r\n              type=\"number\"\r\n              label=\"Alternate Phone (Optional)\"\r\n              value={alternatePhone}\r\n              onChange={(e) => setAlternatePhone(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Address Type</label>\r\n          <div className=\"flexRow\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"home\")}\r\n                name=\"addressType\"\r\n                value=\"home\"\r\n              />\r\n              <span> Home</span>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"work\")}\r\n                name=\"addressType\"\r\n                value=\"work\"\r\n              />\r\n              <span> Work</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <Button\r\n            onClick={onAddressSubmit}\r\n            style={{\r\n              width: \"250px\",\r\n              margin: \"20px 0\",\r\n            }}\r\n          >\r\n            SAVE AND DELIVER HERE\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (props.withoutLayout) {\r\n    return <div>{renderAddressForm()}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\r\n      <div className={`checkoutHeader`}>\r\n        <div>\r\n          <span className=\"stepNumber\">+</span>\r\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"0 60px\",\r\n          paddingBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        {renderAddressForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\ClothingAndAccessories\\index.js",["295","296"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductsBySlug } from \"../../../../actions\";\r\nimport { generatePublicUrl } from \"../../../../urlConfig\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function ClothingAndAccessories\r\n **/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst ClothingAndAccessories = (props) => {\r\n  const classes = useStyles();\r\n  const product = useSelector((state) => state.userProduct);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getProductsBySlug(match.params.slug));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", marginTop: \"70px\" }}>\r\n      <h1>Hello from product Page</h1>\r\n      <Container>\r\n        <Grid container spacing={4}>\r\n          {product.products.map((product) => (\r\n            <Grid item key={product._id} xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <Link to={`/${product.slug}/${product._id}/p`}>\r\n                  <img\r\n                    src={generatePublicUrl(product.productPictures[0].img)}\r\n                  />\r\n                </Link>\r\n                <Link\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#343A40\",\r\n                    textDecoration: \"none\",\r\n                  }}\r\n                  to={`/${product.slug}/${product._id}/p`}\r\n                >\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    style={{ margin: \"10px 0 10px 0 \" }}\r\n                    align=\"center\"\r\n                  >\r\n                    {product.name}\r\n                  </Typography>\r\n                </Link>\r\n\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Price : ${product.price}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClothingAndAccessories;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\ProductListPage\\ProductPage\\index.js",["297","298","299","300"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductPage } from \"../../../../actions\";\r\nimport getParams from \"../../../../utils/getParams\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { generatePublicUrl } from \"../../../../urlConfig\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function ProductPage\r\n **/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst ProductPage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.userProduct);\r\n  const { page } = product;\r\n\r\n  useEffect(() => {\r\n    const params = getParams(props.location.search);\r\n    console.log({ params });\r\n    const payload = {\r\n      params,\r\n    };\r\n    dispatch(getProductPage(payload));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/*<h3>{page.title}</h3>*/}\r\n      <Carousel renderThumbs={() => {}}>\r\n        {page.banners &&\r\n          page.banners.map((banner, index) => (\r\n            <a key={index} style={{ display: \"block\" }}>\r\n              <img src={banner.img} alt=\"\" />\r\n            </a>\r\n          ))}\r\n      </Carousel>\r\n\r\n      <Container style={{ padding: \"10px\", marginTop: \"70px\" }}>\r\n        <h6>Related Product</h6>\r\n        <Grid container spacing={4}>\r\n          {page.products &&\r\n            page.products.map((product, index) => (\r\n              <Grid item key={product._id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <Link to={`/${product.slug}/${product._id}/p`}>\r\n                    <img src={product.img} />\r\n                  </Link>\r\n                  <Link\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#343A40\",\r\n                      textDecoration: \"none\",\r\n                    }}\r\n                    to={`/${product.slug}/${product._id}/p`}\r\n                  >\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      style={{ margin: \"10px 0 10px 0 \" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {product.name}\r\n                    </Typography>\r\n                  </Link>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\UserPages\\CartPage\\CartItem\\index.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\user\\auth.reducer.js",[],"D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\NewPage\\index.js",["301"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Layout from \"../../../components/Layout/AdminLayout\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport linearCategories from \"../../../helpers/linearCategories\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPage } from \"../../../actions\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n/**\r\n * @author\r\n * @function NewPage\r\n **/\r\n\r\nconst NewPage = (props) => {\r\n  const [createModal, setCreateModal] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const category = useSelector((state) => state.category);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [banners, setBanners] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const page = useSelector((state) => state.userProduct);\r\n\r\n  useEffect(() => {\r\n    setCategories(linearCategories(category.categories));\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    if (!page.loading) {\r\n      setCreateModal(false);\r\n      setTitle(\"\");\r\n      setCategoryId(\"\");\r\n      setDesc(\"\");\r\n      setProducts([]);\r\n      setBanners([]);\r\n    }\r\n  }, [page]);\r\n\r\n  const onCategoryChange = (e) => {\r\n    const category = categories.find(\r\n      (category) => category.value == e.target.value\r\n    );\r\n    setCategoryId(e.target.value);\r\n    setType(category.type);\r\n  };\r\n\r\n  const handleBannerImages = (e) => {\r\n    setBanners([...banners, e.target.files[0]]);\r\n  };\r\n\r\n  const handleProductImages = (e) => {\r\n    setProducts([...products, e.target.files[0]]);\r\n  };\r\n\r\n  const submitPageForm = (e) => {\r\n    if (title === \"\") {\r\n      alert(\"Title is required\");\r\n      setCreateModal(false);\r\n      return;\r\n    }\r\n\r\n    if (desc === \"\") {\r\n      alert(\"description is required\");\r\n      setCreateModal(false);\r\n      return;\r\n    }\r\n\r\n    const form = new FormData();\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", desc);\r\n    form.append(\"category\", categoryId);\r\n    form.append(\"type\", type);\r\n    banners.forEach((banner, index) => {\r\n      form.append(\"banners\", banner);\r\n    });\r\n    products.forEach((product, index) => {\r\n      form.append(\"products\", product);\r\n    });\r\n\r\n    dispatch(createPage(form));\r\n  };\r\n\r\n  const renderCreatePageModal = () => {\r\n    return (\r\n      <Modal\r\n        show={createModal}\r\n        modalTitle={\"Create New Page\"}\r\n        handleClose={() => setCreateModal(false)}\r\n        onSubmit={submitPageForm}\r\n      >\r\n        <Container>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  label=\"Category\"\r\n                  type=\"select\"\r\n                  value={categoryId}\r\n                  onChange={onCategoryChange}\r\n                  options={categories}\r\n                  placeholder={\"Select Category\"}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  label=\"Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  placeholder={\"Page Title\"}\r\n                  className=\"\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  label=\"Discription\"\r\n                  value={desc}\r\n                  onChange={(e) => setDesc(e.target.value)}\r\n                  placeholder={\"Page Desc\"}\r\n                  className=\"\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  label=\"Banners\"\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"banners\"\r\n                  onChange={handleBannerImages}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {banners.length > 0\r\n              ? banners.map((banner, index) => (\r\n                  <Row key={index}>\r\n                    <Col>{banner.name}</Col>\r\n                  </Row>\r\n                ))\r\n              : null}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Input\r\n                  label=\"Products\"\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  name=\"products\"\r\n                  onChange={handleProductImages}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {products.length > 0\r\n              ? products.map((product, index) => (\r\n                  <Row key={index}>\r\n                    <Col>{product.name}</Col>\r\n                  </Row>\r\n                ))\r\n              : null}\r\n          </Form.Group>\r\n        </Container>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      {page.loading ? (\r\n        <p>Creating Page...please wait</p>\r\n      ) : (\r\n        <>\r\n          {renderCreatePageModal()}\r\n          <Button\r\n            size=\"lg\"\r\n            onClick={() => setCreateModal(true)}\r\n            variant=\"success\"\r\n          >\r\n            {\" \"}\r\n            Create Page\r\n          </Button>{\" \"}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewPage;\r\n","D:\\fashion-e-commerce-app\\client\\src\\actions\\admin\\register.actions.js",[],"D:\\fashion-e-commerce-app\\client\\src\\reducers\\admin\\register.reducer.js",["302"],"import { adminConstants } from \"../../actions/constants\";\r\n\r\nconst initState = {\r\n  error: null,\r\n  message: \"\",\r\n  loading: false,\r\n};\r\n\r\nconst adminRegisterReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case adminConstants.ADMIN_REGISTER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case adminConstants.ADMIN_REGISTER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n      break;\r\n    case adminConstants.ADMIN_REGISTER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default adminRegisterReducer;\r\n","D:\\fashion-e-commerce-app\\client\\src\\pages\\AdminPages\\CreateAdmin\\index.js",["303","304","305","306"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AdminRegister } from \"../../../actions\";\r\n\r\nimport Layout from \"../../../components/Layout/AdminLayout\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst AdminSignup = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const user = useSelector((state) => state.AdminRegister);\r\n  const dispatch = useDispatch();\r\n\r\n  const AdminSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    const admin = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(AdminRegister(admin));\r\n    if (admin) {\r\n      alert(\"Admin created successfully...!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {user.message}\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Create Admin\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={AdminSignup}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Create Admin\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AdminSignup;\r\n",{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":34,"column":6,"nodeType":"313","endLine":34,"endColumn":25,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":4,"column":10,"nodeType":"317","messageId":"318","endLine":4,"endColumn":18},{"ruleId":"315","severity":1,"message":"319","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":16},{"ruleId":"315","severity":1,"message":"320","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":16},{"ruleId":"315","severity":1,"message":"321","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":16},{"ruleId":"315","severity":1,"message":"322","line":6,"column":29,"nodeType":"317","messageId":"318","endLine":6,"endColumn":36},{"ruleId":"323","severity":1,"message":"324","line":7,"column":1,"nodeType":"325","endLine":18,"endColumn":3},{"ruleId":"326","severity":1,"message":"327","line":8,"column":3,"nodeType":"328","messageId":"329","endLine":15,"endColumn":4},{"ruleId":"311","severity":1,"message":"312","line":17,"column":6,"nodeType":"313","endLine":17,"endColumn":8,"suggestions":"330"},{"ruleId":"307","replacedBy":"331"},{"ruleId":"309","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":236,"column":19,"nodeType":"335","endLine":236,"endColumn":63},{"ruleId":"315","severity":1,"message":"336","line":6,"column":3,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"311","severity":1,"message":"312","line":52,"column":6,"nodeType":"313","endLine":52,"endColumn":8,"suggestions":"337"},{"ruleId":"315","severity":1,"message":"338","line":183,"column":11,"nodeType":"317","messageId":"318","endLine":183,"endColumn":19},{"ruleId":"311","severity":1,"message":"339","line":28,"column":6,"nodeType":"313","endLine":28,"endColumn":8,"suggestions":"340"},{"ruleId":"311","severity":1,"message":"312","line":31,"column":6,"nodeType":"313","endLine":31,"endColumn":25,"suggestions":"341"},{"ruleId":"311","severity":1,"message":"312","line":178,"column":6,"nodeType":"313","endLine":178,"endColumn":25,"suggestions":"342"},{"ruleId":"311","severity":1,"message":"312","line":61,"column":6,"nodeType":"313","endLine":61,"endColumn":8,"suggestions":"343"},{"ruleId":"333","severity":1,"message":"334","line":85,"column":23,"nodeType":"335","endLine":90,"endColumn":25},{"ruleId":"311","severity":1,"message":"344","line":27,"column":6,"nodeType":"313","endLine":27,"endColumn":8,"suggestions":"345"},{"ruleId":"315","severity":1,"message":"346","line":43,"column":14,"nodeType":"317","messageId":"318","endLine":43,"endColumn":19},{"ruleId":"311","severity":1,"message":"347","line":95,"column":6,"nodeType":"313","endLine":95,"endColumn":20,"suggestions":"348"},{"ruleId":"311","severity":1,"message":"349","line":61,"column":6,"nodeType":"313","endLine":61,"endColumn":8,"suggestions":"350"},{"ruleId":"333","severity":1,"message":"334","line":72,"column":19,"nodeType":"335","endLine":74,"endColumn":21},{"ruleId":"315","severity":1,"message":"351","line":7,"column":10,"nodeType":"317","messageId":"318","endLine":7,"endColumn":27},{"ruleId":"311","severity":1,"message":"352","line":68,"column":6,"nodeType":"313","endLine":68,"endColumn":8,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":76,"column":13,"nodeType":"335","endLine":76,"endColumn":57},{"ruleId":"333","severity":1,"message":"334","line":90,"column":21,"nodeType":"335","endLine":90,"endColumn":46},{"ruleId":"356","severity":1,"message":"357","line":46,"column":36,"nodeType":"358","messageId":"359","endLine":46,"endColumn":38},{"ruleId":"326","severity":1,"message":"327","line":10,"column":3,"nodeType":"328","messageId":"329","endLine":31,"endColumn":4},{"ruleId":"315","severity":1,"message":"360","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":24},{"ruleId":"315","severity":1,"message":"361","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":16},{"ruleId":"315","severity":1,"message":"362","line":8,"column":10,"nodeType":"317","messageId":"318","endLine":8,"endColumn":14},{"ruleId":"315","severity":1,"message":"363","line":18,"column":10,"nodeType":"317","messageId":"318","endLine":18,"endColumn":15},"no-native-reassign",["364"],"no-negated-in-lhs",["365"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["366"],"no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'carusel3' is defined but never used.","'carusel4' is defined but never used.","'carusel5' is defined but never used.","'_signup' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["367"],["364"],["365"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getAllCategory' is defined but never used.",["368"],"'idsArray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params'. Either include them or remove the dependency array.",["369"],["370"],["371"],["372"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.orderId'. Either include them or remove the dependency array.",["373"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', and 'submitFlag'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["374"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["375"],"'generatePublicUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["376"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"379","fix":"381"},{"desc":"382","fix":"383"},{"desc":"377","fix":"384"},{"desc":"377","fix":"385"},{"desc":"379","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"395","text":"396"},"Update the dependencies array to be: [dispatch]",{"range":"397","text":"398"},{"range":"399","text":"398"},"Update the dependencies array to be: [dispatch, props.match.params]",{"range":"400","text":"401"},{"range":"402","text":"396"},{"range":"403","text":"396"},{"range":"404","text":"398"},"Update the dependencies array to be: [dispatch, props.match.params.orderId]",{"range":"405","text":"406"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user.address]",{"range":"407","text":"408"},"Update the dependencies array to be: [dispatch, props]",{"range":"409","text":"410"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"411","text":"412"},[1210,1229],"[auth.authenticate, dispatch]",[413,415],"[dispatch]",[1777,1779],[843,845],"[dispatch, props.match.params]",[927,946],[5406,5425],[1636,1638],[815,817],"[dispatch, props.match.params.orderId]",[2570,2584],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user.address]",[1607,1609],"[dispatch, props]",[1814,1816],"[dispatch, props.location.search]"]